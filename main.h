#ifndef _main_h
#define _main_h

#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <SDL/SDL.h>
#include "palette.h"

#define TRUE 1
#define FALSE 0

#define SCREEN_WIDTH 640
#define SCREEN_HEIGHT 480
#define SCREEN_BPP 8

typedef enum {
  DIRECTION_NONE,
  DIRECTION_UP,
  DIRECTION_RIGHT,
  DIRECTION_DOWN,
  DIRECTION_LEFT
} Direction;

extern const SDL_Rect SCREEN_RECT;

// controls
#define CONTROLS_RIGHT SDLK_RIGHT
#define CONTROLS_LEFT SDLK_LEFT

// blocks
#define MAX_BLOCKS 512
#define BLOCK_ROWS 8
#define BLOCK_WIDTH 30
#define BLOCK_HEIGHT 14
#define BLOCK_SPACING 2
#define BLOCKS_X 64
#define BLOCKS_Y 64

// paddle
#define INITIAL_PADDLE_WIDTH 64
#define INITIAL_PADDLE_HEIGHT 8
#define PADDLE_MARGIN_Y 64
#define INITIAL_PADDLE_X ((SCREEN_WIDTH - INITIAL_PADDLE_WIDTH) / 2.0f)
#define INITIAL_PADDLE_Y (SCREEN_HEIGHT - INITIAL_PADDLE_HEIGHT - PADDLE_MARGIN_Y)
#define PADDLE_VELOCITY 5
#define PADDLE_CURVINESS (1.0f / 64.0f)

// ball
#define INITIAL_BALL_WIDTH 5
#define INITIAL_BALL_HEIGHT 5
#define INITIAL_BALL_X (INITIAL_PADDLE_X + (INITIAL_PADDLE_WIDTH - INITIAL_BALL_WIDTH) / 2.0f)
#define INITIAL_BALL_Y (INITIAL_PADDLE_Y - INITIAL_BALL_HEIGHT - 1)
#define INITIAL_BALL_ANGLE (M_PI / 4)
#define INITIAL_BALL_SPEED 3
#define BALL_ACCELERATION 0.001

// colors
#define BACKGROUND_COLOR COLOR_BLACK
#define BLOCK_COLOR COLOR_ORANGE
#define PADDLE_COLOR COLOR_WHITE
#define BALL_COLOR COLOR_WHITE

#endif

